"var Component=(()=>{var m=Object.create;var a=Object.defineProperty;var h=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,f=Object.prototype.hasOwnProperty;var x=(o,e)=>()=>(e||o((e={exports:{}}).exports,e),e.exports),q=(o,e)=>{for(var i in e)a(o,i,{get:e[i],enumerable:!0})},c=(o,e,i,r)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let t of b(e))!f.call(o,t)&&t!==i&&a(o,t,{get:()=>e[t],enumerable:!(r=h(e,t))||r.enumerable});return o};var T=(o,e,i)=>(i=o!=null?m(g(o)):{},c(e||!o||!o.__esModule?a(i,\"default\",{value:o,enumerable:!0}):i,o)),v=o=>c(a({},\"__esModule\",{value:!0}),o);var d=x((C,s)=>{s.exports=_jsx_runtime});var y={};q(y,{default:()=>p});var n=T(d());function l(o){let e={code:\"code\",h1:\"h1\",p:\"p\",...o.components},{PostsOverTimeChart:i,ReadingTimeDistributionChart:r}=e;return i||u(\"PostsOverTimeChart\",!0),r||u(\"ReadingTimeDistributionChart\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{children:\"Publicaciones a lo largo del tiempo\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Este gr\\xE1fico muestra el n\\xFAmero de publicaciones publicadas a lo largo del tiempo. Los datos se obtienen utilizando una consulta GraphQL definida en \",(0,n.jsx)(e.code,{children:\"components/charts.tsx\"}),\" que recupera el campo \",(0,n.jsx)(e.code,{children:\"postsOverTime\"}),\" del servidor GraphQL. Cada punto de datos representa un mes y el n\\xFAmero de publicaciones publicadas en ese mes.\"]}),`\n`,(0,n.jsx)(i,{}),`\n`,(0,n.jsx)(e.h1,{children:\"Distribuci\\xF3n del tiempo de lectura\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Este gr\\xE1fico muestra la distribuci\\xF3n de los tiempos de lectura de todas las publicaciones. Los datos se obtienen utilizando una consulta GraphQL definida en \",(0,n.jsx)(e.code,{children:\"components/charts.tsx\"}),\" que recupera el campo \",(0,n.jsx)(e.code,{children:\"readingTimeDistribution\"}),' del servidor GraphQL. Cada punto de datos representa una categor\\xEDa de tiempo de lectura (por ejemplo, \"1-2 minutos\", \"2-3 minutos\", etc.) y el n\\xFAmero de publicaciones que caen en esa categor\\xEDa.']}),`\n`,(0,n.jsx)(r,{}),`\n`,(0,n.jsxs)(e.p,{children:[\"El esquema del servidor GraphQL se define en \",(0,n.jsx)(e.code,{children:\"/api/graphql\"}),\". Los tipos \",(0,n.jsx)(e.code,{children:\"PostsOverTime\"}),\" y \",(0,n.jsx)(e.code,{children:\"ReadingTimeDistribution\"}),\" son parte de este esquema. \",(0,n.jsx)(e.code,{children:\"PostsOverTime\"}),\" tiene dos campos: \",(0,n.jsx)(e.code,{children:\"month\"}),\" (una cadena que representa el mes) y \",(0,n.jsx)(e.code,{children:\"count\"}),\" (un entero que representa el n\\xFAmero de publicaciones). \",(0,n.jsx)(e.code,{children:\"ReadingTimeDistribution\"}),\" tambi\\xE9n tiene dos campos: \",(0,n.jsx)(e.code,{children:\"category\"}),\" (una cadena que representa la categor\\xEDa de tiempo de lectura) y \",(0,n.jsx)(e.code,{children:\"count\"}),\" (un entero que representa el n\\xFAmero de publicaciones en esa categor\\xEDa).\"]})]})}function p(o={}){let{wrapper:e}=o.components||{};return e?(0,n.jsx)(e,{...o,children:(0,n.jsx)(l,{...o})}):l(o)}function u(o,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+o+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return v(y);})();\n;return Component;"