"var Component=(()=>{var l=Object.create;var s=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var T=(n,e)=>()=>(e||n((e={exports:{}}).exports,e),e.exports),v=(n,e)=>{for(var i in e)s(n,i,{get:e[i],enumerable:!0})},h=(n,e,i,r)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let o of f(e))!b.call(n,o)&&o!==i&&s(n,o,{get:()=>e[o],enumerable:!(r=u(e,o))||r.enumerable});return n};var x=(n,e,i)=>(i=n!=null?l(g(n)):{},h(e||!n||!n.__esModule?s(i,\"default\",{value:n,enumerable:!0}):i,n)),y=n=>h(s({},\"__esModule\",{value:!0}),n);var a=T((D,d)=>{d.exports=_jsx_runtime});var w={};v(w,{default:()=>p});var t=x(a());function c(n){let e={code:\"code\",h1:\"h1\",p:\"p\",...n.components},{PostsOverTimeChart:i,ReadingTimeDistributionChart:r}=e;return i||m(\"PostsOverTimeChart\",!0),r||m(\"ReadingTimeDistributionChart\",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{children:\"Posts over time\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"This chart shows the number of posts published over time. The data is fetched using a GraphQL query defined in \",(0,t.jsx)(e.code,{children:\"components/charts.tsx\"}),\" which retrieves the \",(0,t.jsx)(e.code,{children:\"postsOverTime\"}),\" field from the GraphQL server. Each data point represents a month and the number of posts published in that month.\"]}),`\n`,(0,t.jsx)(i,{}),`\n`,(0,t.jsx)(e.h1,{children:\"Reading time distribution\"}),`\n`,(0,t.jsxs)(e.p,{children:[\"This chart shows the distribution of reading times for all posts. The data is fetched using a GraphQL query defined in \",(0,t.jsx)(e.code,{children:\"components/charts.tsx\"}),\" which retrieves the \",(0,t.jsx)(e.code,{children:\"readingTimeDistribution\"}),' field from the GraphQL server. Each data point represents a category of reading time (e.g., \"1-2 minutes\", \"2-3 minutes\", etc.) and the number of posts that fall into that category.']}),`\n`,(0,t.jsx)(r,{}),`\n`,(0,t.jsxs)(e.p,{children:[\"The GraphQL server's schema is defined in \",(0,t.jsx)(e.code,{children:\"/api/graphql\"}),\". The \",(0,t.jsx)(e.code,{children:\"PostsOverTime\"}),\" and \",(0,t.jsx)(e.code,{children:\"ReadingTimeDistribution\"}),\" types are part of this schema. \",(0,t.jsx)(e.code,{children:\"PostsOverTime\"}),\" has two fields: \",(0,t.jsx)(e.code,{children:\"month\"}),\" (a string representing the month) and \",(0,t.jsx)(e.code,{children:\"count\"}),\" (an integer representing the number of posts). \",(0,t.jsx)(e.code,{children:\"ReadingTimeDistribution\"}),\" also has two fields: \",(0,t.jsx)(e.code,{children:\"category\"}),\" (a string representing the reading time category) and \",(0,t.jsx)(e.code,{children:\"count\"}),\" (an integer representing the number of posts in that category).\"]})]})}function p(n={}){let{wrapper:e}=n.components||{};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(c,{...n})}):c(n)}function m(n,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return y(w);})();\n;return Component;"